from typing import List
from typing import Dict
import logging
import json
from http import HTTPStatus


"""
Pets test library
"""


class Pets:

    def __init__(self, client, cmn_cfg):
        self.rest_client = client
        self.cmn_cfg = cmn_cfg
        self.log = logging.getLogger(__name__)
        self.headers = {'Content-type': 'application/json',
                        'Accept': 'application/json'}

    def create_pet(self, pet_data: List[Dict]):
        """
        Create multiple pets
        Call type: POST



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































        Endpoint: /pet
        Body: {
            "id": 0,
            "category": {
            "id": 0,
            "name": "string"
            },
            "name": "doggie",
            "photoUrls": [
            "string"
            ],
            "tags": [
            {
            "id": 0,
            "name": "string"
            }
            ],
            "status": "available"
        }
        :param pet_data:
        :return:
        """
        endpoint = self.cmn_cfg.get('target_url') + '/pet'
        # can be moved to a rest url module which uses lambda to form it and heads uri

        resp = self.rest_client.rest_call("post", endpoint=endpoint, data=pet_data,
                                      headers=self.headers)
        return json.loads(resp.text)

    def create_pets(self, pets: List[Dict]):
        responses = list()
        for pet in pets:
            responses.append(self.create_pet(pet))
        return responses

    def update_pet_status(self, pet: Dict):
        """
        Update pet's status and other details (Statuses to be considered: available, pending and sold)
        Call type: PUT
        Endpoint: /pet
        Body: {
            "id": 0,
            "category": {
            "id": 0,
            "name": "string"
            },
            "name": "doggie",
            "photoUrls": [
            "string"
            ],
            "tags": [
            {
            "id": 0,
            "name": "string"
            }
            ],
            "status": "available"
        }self.cmn_cfg
        :return:
        """
        endpoint = self.cmn_cfg.get('target_url') + '/pet'
        resp = self.rest_client.rest_call("put", endpoint=endpoint, data=pet,
                                          headers=self.headers)
        return json.loads(resp.text)

    def find_pet_by_status(self, status='sold'):
        """
        Get pet by status
        Call type: GET
        Endpoint: /pet/findByStatus?status=available (Statuses to be considered: available, pending and sold)

        :return:
        """
        endpoint = self.cmn_cfg.get('target_url') + f'/pet/findByStatus?status={status}'
        resp = self.rest_client.rest_call("get", endpoint=endpoint,
                                          headers=self.headers)
        return json.loads(resp.text)
